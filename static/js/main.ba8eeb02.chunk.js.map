{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba8eeb02.chunk.js","sourcesContent":["import AppHeader from './app-header';\nexport default AppHeader;","import React from 'react';\n\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n      <div className=\"app-header d-flex\">\n        <h1>Todo List</h1>\n        <h2>{toDo} more to do, {done} done</h2>\n      </div>\n    );\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, {Component} from 'react';\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: ''\n    }\n\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({ term });\n        this.props.onSearchChange(term);\n    }\n\n    render() {\n        return (\n            <input \n                type=\"text\"\n                className=\"form-control search-input\" \n                placeholder=\"type to search\" \n                value={this.state.term}\n                onChange={this.onSearchChange}\n            />\n        );\n    }\n} ","import TodoListItem from './todo-list-item';\nexport default TodoListItem;","import React, {Component} from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n    render() {\n        const { label, \n                onDeleted, \n                onToggleImportant, \n                onToggleDone,\n                important,\n                done } = this.props;  \n\n        let classNames = \"todo-list-item d-flex\";\n\n        if (done) {\n            classNames += \" done\";\n        }\n\n        if (important) {\n            classNames += \" important\";\n        }\n    \n        return (\n            <span className={ classNames }>\n                <span\n                    className=\"todo-list-item-label\"\n                    onClick={ onToggleDone  }\n                >\n                    { label }\n                </span>\n    \n                <button type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-right\"\n                        onClick={ onToggleImportant }\n                >\n                    <i className=\"fa fa-exclamation\" />\n                </button>\n    \n                <button type=\"button\"\n                        className=\"btn btn-outline-danger btn-sm float-right\"\n                        onClick={onDeleted}\n                >\n                    <i className=\"fa fa-trash-o\" />\n                </button>\n            </span>\n        );\n    }\n\n}","import TodoList from './todo-list';\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\n\n    const elements = todos.map((item) => {\n\n        const { id, ...itemProps } = item;\n        \n        return (\n            <li className=\"list-group-item\"\n                key={id}\n            >\n                <TodoListItem\n                    {...itemProps}\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        );\n    })\n\n    return (\n        <ul className=\"list-group todo-list\">\n            { elements }\n        </ul>\n    );\n}\n\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\nexport default ItemStatusFilter;","import React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        { name: 'all', label: 'All' },\n        { name: 'active', label: 'Active' },\n        { name: 'done', label: 'Done' }\n    ]\n\n    render() {\n\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\n            return (\n                <button type=\"button\"\n                    className={`btn ${clazz}`}\n                    key={ name }\n                    onClick={() => onFilterChange(name)}\n                >{ label }</button>\n            );\n        });\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n\n}","import ItemAddForm from './item-add-form';\nexport default ItemAddForm;","import React, { Component } from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        return (\n            <form \n                className=\"item-add-form d-flex\"\n                onSubmit={this.onSubmit}\n            >\n                <input \n                    type=\"text\" \n                    className=\"form-control\"\n                    onChange={this.onLabelChange}\n                    placeholder=\"What needs to be done\"\n                    value={this.state.label}\n                />\n                <button \n                    className=\"btn btn-outline-secondary\"\n                >\n                        Add Item\n                </button>\n            </form>\n        );\n    }\n}","import App from './app';\nexport default App;","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem(\"Drink Coffee\"),\n            this.createTodoItem(\"Drink More Coffee\"),\n            this.createTodoItem(\"Drink All Coffee In the House\"),\n            this.createTodoItem(\"Go to Barcelona\"),\n            this.createTodoItem(\"Then Go to Tenerife\")\n        ],\n        term: '',\n        filter: 'all' //active, all, done\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        };\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const before = todoData.slice(0, idx),\n                  after = todoData.slice(idx + 1);\n            const newArr = [...before, ...after];\n\n            return {\n                todoData: newArr\n            }\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({todoData})=> {\n            const newArr = [\n                ...todoData,\n                newItem\n            ];\n\n            return {\n                todoData: newArr\n            }\n        });\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        //1. update object\n        const oldItem = arr[idx];\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n        //2. construct new arr\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        });\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            }\n        });\n    };\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    }\n    \n    search(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n        });\n    }\n\n    filter(items, filter) {\n        switch(filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n    }\n\n    render() {\n        const { todoData, term, filter } = this.state;\n        const visibleItems = this.filter(this.search(todoData, term), filter);\n\n        let doneCount = todoData.filter((el) => el.done).length;\n        let todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/> \n                <div className=\"top-panel d-flex\">\n                    <SearchPanel \n                        onSearchChange={this.onSearchChange}\n                    />\n                    <ItemStatusFilter \n                        filter={filter}\n                        onFilterChange={this.onFilterChange}\n                    />\n                </div>\n                \n                <TodoList \n                    todos={ visibleItems }\n                    onDeleted={ this.deleteItem }\n                    onToggleImportant={ this.onToggleImportant }\n                    onToggleDone={ this.onToggleDone }\n                />\n                <ItemAddForm \n                    onItemAdded={ this.addItem }\n                />\n            </div>\n        );\n    };\n} ;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}